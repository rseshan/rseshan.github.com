<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Margin of Safety]]></title>
  <link href="http://rseshan.github.com/atom.xml" rel="self"/>
  <link href="http://rseshan.github.com/"/>
  <updated>2013-02-20T09:14:16-05:00</updated>
  <id>http://rseshan.github.com/</id>
  <author>
    <name><![CDATA[Rahul Seshan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Check Yo <em>Self</em> Before You Wreck Yo <em>Self</em>]]></title>
    <link href="http://rseshan.github.com/blog/2013/02/20/check-yo-self-before-you-wreck-yo-self/"/>
    <updated>2013-02-20T04:25:00-05:00</updated>
    <id>http://rseshan.github.com/blog/2013/02/20/check-yo-self-before-you-wreck-yo-self</id>
    <content type="html"><![CDATA[<p>Who am I?  Man&#8217;s age old question is the same one I&#8217;ve been asking myself in Ruby over the last few days.  The key word <em>self</em> is the embodiment of the question, with a slight twist.  In Ruby, everything is an object, and there is one and only one current object at a given point.  This current object is <em>self</em>.  Depending on where you are in the program, <em>self</em> will be different.  Here are some examples to illustrate how <em>self</em> changes depending on the context of the situation.</p>




<h2>Context 1: Top-Level</h2>


<p><img src="http://rseshan.github.com/images/top_level_self.png"></p>

<p><em>Main</em> is the default top level object that <em>self</em> refers to, and <em>main</em> itself is an instance of an object.  <em>Self</em> in top level methods reference whatever object the method is being called on.

<h2>Context 2: Classes/Modules</h2>
<p>Here, self is the Class or Module object.</p>
<img src="http://rseshan.github.com/images/class_module_self.png">
<p>So, we&#8217;ve seen <em>self</em> go from top-level <em>main</em> to individual Classes and Modules.</p>

<h2> Context 3: Instance and Class Methods</h3>
<img src="http://rseshan.github.com/images/methods_self.png">
<p>The key here is that a method is telling an object what to do, so <em>self</em> within a method is always the object on which the method is being called on (the receiver of the message).  When we first created the instance of the Class Rapper (<em>ice_cube = Rapper.new</em>), and subsequently called <em>time_period</em> on that instance, <em>self</em> is referencing that specific instance, and denotes it by the <em>#Rapper:0x bunch of digits</em>, which is the memory location of that instance.  We see that when we call the <em>consensus</em> method on that instance, we get the same object (<em>self</em>) confirmed by the same reference number.  However, if we look at the class method <em>self.consensus</em>, the object in <em>self</em> is the class Rapper.  Of note, defining the method as <em>self.consensus</em> would have been equivalent to writing <em>Rapper.consensus</em>, which underscores that <em>Rapper = self</em>.  In summary, <em>self</em> can be representing the Class object or an instance of the Class object depending on the context.</p><br>

<p>For further reading, check it yo:<br>
<a href = http://www.jimmycuadra.com/posts/self-in-ruby>Jimmy Cuadra: Self in Ruby</a><br>
<a href = http://sidtalk.wordpress.com/2008/10/06/what-exactly-is-ruby-self/>Sid&#8217;s Weblog: What Exactly is Ruby Self</a><br>
<a href = http://paulbarry.com/articles/2008/04/17/the-rules-of-ruby-self>Paul Barry: Rules of Ruby Self</a><br>
</p>

<p>And last but not least, here&#8217;s Ice Cube&#8217;s words of wisdom on the subject&#8230;
<iframe width="560" height="315" src="http://www.youtube.com/embed/CLyS9gz307Y?rel=0" frameborder="0" allowfullscreen></iframe></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 Reasons I'm Learning to Code]]></title>
    <link href="http://rseshan.github.com/blog/2013/02/12/5-reasons-im-learning-to-code/"/>
    <updated>2013-02-12T05:14:00-05:00</updated>
    <id>http://rseshan.github.com/blog/2013/02/12/5-reasons-im-learning-to-code</id>
    <content type="html"><![CDATA[<p>Last week, I started as a student at the <a href="http://flatironschool.com/">Flatiron School</a>, a 3-month, full-time, web development program here in NYC.  Why?</p>

<p><strong><p>1. Build something.  </strong>&#8220;I wish someone would create something that would fix problem xyz&#8221; - a commong refrain heard amongst my friend circles.  I&#8217;m tired of saying that, tired of building sand castles in the sky and always waiting for someone else to take action.  I want to turn ideas into reality.  If you can think it, you can code it.</p>
<strong><p>2. Don&#8217;t be left behind.  </strong>As Marc Andreesen&#8217;s alludes to in his piece <a href="http://online.wsj.com/article/SB10001424053111903480904576512250915629460.html">Why Software is Eating the World</a>, we are becoming a more technology - and specifically, software - dependent society on a daily basis.  A unfortunate by-product is the chasm developing between those who have the aptitude to be part of the transformation and those whose skills are fast becoming antiquated.  Being able to code on even a rudimentary basis will be a new form of literacy, as basic as reading or writing.</p>
<strong><p>3. Never stop learning.  </strong>My programming acumen prior to starting school was non-existent.  So after developing a skillset in a completely different field, why would I put myself in a situation where I&#8217;m starting from scratch?  I think learning for learning&#8217;s sake is intellectually stimulating and expand&#8217;s one horizons.  I don&#8217;t know what the end result of these 3 months will be, but I&#8217;ve already learned a ton which has already made the experience worth it.</p>
<strong><p>4. Creative outlet.  </strong>Sadly, I have no artistic talent.  I can&#8217;t draw, and despite what you may have heard about my amazing &#8220;Livin&#8217; on a Prayer&#8221; Karaoke rendition, I can&#8217;t sing either.  I look at coding as a means of expressing myself creatively.</p>
<strong><p>5. It&#8217;s fun.  </strong>Psychologists refer to <a href="http://en.wikipedia.org/wiki/Flow_(psychology)">flow</a> as a mental state where you&#8217;re fully immersed in an activity, an almost spiritutual state where you lose track of time.  I have the attention span of a 5-year old, and while I&#8217;ve only been doing this for a week, I&#8217;m finding myself spending hours on coding exercises and not realizing how much time I&#8217;m spending.  And despite that, I&#8217;m still enjoying myself.  I get a kick out of breaking down and solving problems, and there are very few feelings like the moment when something clicks.  I like having those moments.  I want more.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://rseshan.github.com/blog/2013/02/05/hello-world/"/>
    <updated>2013-02-05T17:21:00-05:00</updated>
    <id>http://rseshan.github.com/blog/2013/02/05/hello-world</id>
    <content type="html"><![CDATA[<p>This is the start of something big.</p>
]]></content>
  </entry>
  
</feed>
